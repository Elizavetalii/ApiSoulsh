@model Sinitsyna.Models.ShoppingCart

<style>
    /* Стили для кнопок +/- */
    .quantity-control button {
        background-color: indianred;
        /* Бежевый цвет фона */
        color: #000; /* Черный цвет текста */
        border: none;
        padding: 5px 10px;
        border-radius: 5px; /* Округлые края */
        cursor: pointer;
        transition: background-color 0.3s; /* Плавный переход цвета при наведении */
    }

        .quantity-control button:hover {
            background-color: #e8e3d3; /* Более светлый бежевый цвет при наведении */
        }
</style>

<div class="links">
    <div class="links_item menu_main">
        @if (Model.CartLines.Count == 0)
        {
            <p class="links__item menu_main" style="background-color: #f5f5dc; color: black;">Товаров в заказе нет</p>
            <a class="links__item menu_main" style="background-color: #f5f5dc; color: black;" href="/">Назад к товарам</a>
        }
        else
        {
            <div class="cart-items">
                @foreach (var cartLine in Model.CartLines)
                {
                    <div class="cart-item" style="background-color: #f5f5dc; color: black; margin-bottom: 15px; padding: 10px; border-radius: 5px; display: flex;">
                        @* Изображение товара и ссылка на страницу деталей товара *@
                        <a href="@Url.Action("Details", "Home", new { id = cartLine.ProductId })" style="text-decoration: none; color: inherit; display: flex;">
                            <img src="@cartLine.ImageUrl" alt="@cartLine.ProductName" style="width: 100px; height: 100px; object-fit: cover; margin-right: 10px;" />
                        </a>
                        <div class="cart-item-details">
                            <a href="@Url.Action("Details", "Home", new { id = cartLine.ProductId })" style="text-decoration: none; color: inherit;">
                                <h3>@cartLine.ProductName</h3>
                            </a>
                            <p><strong>Цена:</strong> @cartLine.Price.ToString("C")</p>
                            <p><strong>Количество:</strong></p>
                            <div class="quantity-control">
                                <button class="quantity-control button btn-decrease" data-product-id="@cartLine.ProductId">-</button>
                                <span class="quantity" id="quantity-@cartLine.ProductId">@cartLine.Quantity</span>
                                <button class="quantity-control button btn-increase" data-product-id="@cartLine.ProductId">+</button>
                            </div>
                            <a href="/Home/RemoveFromCart?number=@Model.CartLines.IndexOf(cartLine)" class="remove-item">Убрать из корзины</a>
                        </div>
                    </div>
                }
            </div>
            <p><strong>Итоговая цена:</strong> @Model.FinalPrice.ToString("C")</p>
            <a href="/Home/RemoveAllFromCart" onclick="return confirm('Вы уверены, что хотите очистить всю корзину?');" class="btn-clear">
                Очистить корзину
            </a>

            <a class="links__item menu_main btn-checkout" href="@Url.Action("Checkout", "Home", new { isDelivery = false })">Оформить заказ</a>


        }
    </div>
</div>

<style>
    .cart-items {
        display: flex;
        flex-direction: column;
    }

    .cart-item {
        display: flex;
        padding: 15px;
        border-radius: 8px;
        box-shadow: 0 2px 4px rgba(0,0,0,0.1);
    }

    .cart-item-details {
        flex-grow: 1; /* Позволяет текстовой части занимать оставшееся пространство */
    }

    .remove-item {
        color: red;
        text-decoration: underline;
        cursor: pointer;
    }

        .remove-item:hover {
            text-decoration: none;
        }

    .quantity-control {
        display: flex;
        align-items: center;
    }

        .quantity-control button {
            margin: 0 5px;
        }
</style>

<script>
    // JavaScript для управления количеством в корзине
    document.addEventListener('DOMContentLoaded', function () {
        const decreaseButtons = document.querySelectorAll('.btn-decrease');
        const increaseButtons = document.querySelectorAll('.btn-increase');

        decreaseButtons.forEach(button => {
            button.addEventListener('click', function () {
                const productId = this.getAttribute('data-product-id');
                const quantityElement = document.getElementById(`quantity-${productId}`);
                let quantity = parseInt(quantityElement.textContent);

                if (quantity > 1) {
                    quantity--;
                    quantityElement.textContent = quantity;
                    updateCart(productId, quantity); // Обновляем корзину на сервере
                }
            });
        });

        increaseButtons.forEach(button => {
            button.addEventListener('click', function () {
                const productId = this.getAttribute('data-product-id');
                const quantityElement = document.getElementById(`quantity-${productId}`);
                let quantity = parseInt(quantityElement.textContent);

                // Получаем доступное количество товара из базы данных или другого источника
                const availableQuantity = parseInt(this.closest('.cart-item').querySelector('p:nth-child(3)').textContent.replace(/[^0-9.-]+/g,"")); // Извлекаем доступное количество

                if (quantity < availableQuantity) {
                    quantity++;
                    quantityElement.textContent = quantity;
                    updateCart(productId, quantity); // Обновляем корзину на сервере
                } else {
                    alert('Достигнуто максимальное количество для этого товара.');
                }
            });
        });

        function updateCart(productId, quantity) {
            fetch(`/Home/UpdateCart?Id=${productId}&Quantity=${quantity}`, { method: 'POST' })
                .then(response => {
                    if (!response.ok) {
                        console.error('Ошибка при обновлении количества товара в корзине');
                    }
                })
                .catch(error => console.error('Ошибка:', error));
        }
    });
</script>
