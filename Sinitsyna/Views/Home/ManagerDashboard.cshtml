
@model (IEnumerable<Sinitsyna.Models.Product>, IEnumerable<Sinitsyna.Models.Boutique>, IEnumerable<Sinitsyna.Models.ProductMaterial>, IEnumerable<Sinitsyna.Models.ProductType>)


@{
    ViewData["Title"] = "Панель Менеджера";
}

<style>
    .button {
        background-color: #f5deb3;
        border: none;
        color: black;
        padding: 10px 20px;
        text-align: center;
        text-decoration: none;
        display: inline-block;
        font-size: 16px;
        border-radius: 8px;
        cursor: pointer;
        transition: background-color 0.3s;
    }
</style>

<h2>Панель Менеджера</h2>

<p>Добро пожаловать, @ViewBag.UserName!</p>
<p>Ваша должность: @ViewBag.UserRole</p>

<h3>Управление товарами</h3>


<a id="showAddProductForm" style="cursor:pointer;" class="button">Добавить новый товар</a>
<div id="addProductForm" style="display:none;">
    <h4>Добавление нового товара</h4>
    <form id="formAddProduct" method="post">
    <label for="Product_name">Название товара:</label>
    <input type="text" name="Product_name" required>
    
    <label for="Price">Цена:</label>
    <input type="number" name="Price" step="0.01" required>
    
    <label for="Quantity">Количество:</label>
    <input type="number" name="Quantity" required>
    
    <label for="Product_description">Описание товара:</label>
    <textarea name="Product_description" required></textarea>
    
<label for="Boutique">Адрес бутика:</label>
<select name="Id_boutique" id="BoutiqueSelect" required>
    @foreach (var boutique in Model.Item2)
    {
        <option value="@boutique.Id_boutique">@boutique.Boutique_address</option>
    }
</select>
    
    <label for="ProductType">Тип товара:</label>
    <select name="Id_type" id="ProductTypeSelect">
        @foreach (var type in Model.Item4)
        {
            <option value="@type.Id_type">@type.Product_type_name</option>
        }
    </select>

    <label for="ProductMaterial">Материал товара:</label>
    <select name="Id_material" id="ProductMaterialSelect">
        @foreach (var material in Model.Item3)
        {
            <option value="@material.Id_material">@material.Material_name</option>
        }
    </select>

    <label for="imageUrl">URL изображения:</label>
    <input type="text" name="imageUrl" required>

    <button type="submit">Добавить</button>
</form>
</div>

<table>
    <thead>
        <tr>
            <th>ID товара</th>
            <th>Название товара</th>
            <th>Цена</th>
            <th>Количество</th>
            <th>Описание товара</th>
               <th>Изображения</th>
            <th>Адрес бутика</th>
            <th>Тип товара</th>
            <th>Материал товара</th>
         
            <th>Действия</th>
        </tr>
    </thead>
    <tbody id="productTableBody">
        @if (Model.Item1 != null && Model.Item1.Any())
        {
            foreach (var product in Model.Item1)
            {
                <tr data-id="@product.Id_product">
                    <td>@product.Id_product</td>
                    <td>
                        <span class="product-name">@product.Product_name</span>
                        <textarea class="edit-product-name" style="display:none;">@product.Product_name</textarea>
                    </td>
                    <td>
                        <span class="product-price">@product.Price</span> ₽
                        <input type="number" class="edit-product-price" value="@product.Price" style="display:none;" />
                    </td>
                    <td>
                        <span class="product-quantity">@product.Quantity</span> ед.
                        <input type="number" class="edit-product-quantity" value="@product.Quantity" style="display:none;" />
                    </td>
                    <td>
                        <span class="product-description">@product.Product_description</span>
                        <textarea class="edit-product-description" style="display:none;">@product.Product_description</textarea>
                    </td>
                    <td>
                        @foreach (var image in product.ProductImages)
                        {
                            <img src="@image.Url_image" style="width: 50px; height: auto;" />
                        }
                        <input type="text" class="edit-product-image-url" value="@string.Join(", ", product.ProductImages.Select(img => img.Url_image))" style="display:none;" />
                    </td>
                    <td>
                        @Html.DropDownList("Id_boutique",
                                 new SelectList(Model.Item2, "Id_boutique", "Boutique_address", product.Id_boutique),
                                 new { @class = "edit-boutique", style = "display:none;" })
                        <span>@product.Boutique?.Boutique_address</span>
                    </td>
                    <td>
                        @Html.DropDownList("Id_type",
                                 new SelectList(Model.Item4, "Id_type", "Product_type_name", product.Id_type),
                                 new { @class = "edit-product-type", style = "display:none;" })
                        <span>@product.ProductType?.Product_type_name</span>
                    </td>
                    <td>
                        @Html.DropDownList("Id_material",
                                 new SelectList(Model.Item3, "Id_material", "Material_name", product.Id_material),
                                 new { @class = "edit-product-material", style = "display:none;" })
                        <span>@product.ProductMaterial?.Material_name</span>
                    </td>
                    <td>
                        <button class="edit-product button">Редактировать</button>
                        <button class="save-product button" style="display:none;">Сохранить изменения</button>
                        <button class="delete-product button" data-id="@product.Id_product">Удалить</button>
                    </td>
                </tr>
            }
        }
        else
        {
            <tr><td colspan="10">Нет данных для отображения товаров.</td></tr>
        }
    </tbody>
</table>

<script src="https://ajax.googleapis.com/ajax/libs/jquery/3.5.1/jquery.min.js"></script>
<script>
    $(document).ready(function () {
        $('.delete-product').click(function () {
            var row = $(this).closest('tr');
            var id = $(this).data('id');

            if (confirm('Вы уверены, что хотите удалить этот товар?')) {
                $.ajax({
                    type: 'POST',
                    url: '@Url.Action("DeleteProduct")',
                    data: { id: id },
                    success: function (response) {
                        if (response.success) {
                            row.remove();
                            alert('Товар успешно удален!');
                        } else {
                            alert('Ошибка при удалении товара.');
                        }
                    },
                    error: function () {
                        alert('Ошибка соединения с сервером.');
                    }
                });
            }
        });
        $('.edit-product').click(function () {
            var row = $(this).closest('tr');
            row.find('.edit-product-name, .edit-product-price, .edit-product-quantity, .edit-product-description, .edit-boutique, .edit-product-type, .edit-product-material, .edit-product-image-url').show();
            row.find('.save-product').show();
            $(this).hide();
        });

        $('.save-product').click(function () {
            var row = $(this).closest('tr');
            var id = row.data('id');
            var updatedProduct = {
                Id_product: id,
                Product_name: row.find('.edit-product-name').val(),
                Price: row.find('.edit-product-price').val(),
                Quantity: row.find('.edit-product-quantity').val(),
                Product_description: row.find('.edit-product-description').val(),
                Id_boutique: row.find('.edit-boutique').val(),
                Id_type: row.find('.edit-product-type').val(),
                Id_material: row.find('.edit-product-material').val(),
                ImageUrls: row.find('.edit-product-image-url').val().split(',')
            };

            if (!updatedProduct.Product_name || !updatedProduct.Price || !updatedProduct.Quantity || !updatedProduct.Product_description) {
                alert('Пожалуйста, заполните все поля.');
                return;
            }

            $.ajax({
                type: 'POST',
                url: '@Url.Action("EditProduct")',
                data: updatedProduct,
                success: function (response) {
                    if (response.success) {
                        row.find('.product-name').text(updatedProduct.Product_name);
                        row.find('.product-price').text(updatedProduct.Price);
                        row.find('.product-quantity').text(updatedProduct.Quantity);
                        row.find('.product-description').text(updatedProduct.Product_description);
                        row.find('.product-image-url').text(updatedProduct.ImageUrls.join(', '));

                        row.find('.edit-product-name, .edit-product-price, .edit-product-quantity, .edit-product-description, .edit-boutique, .edit-product-type, .edit-product-material, .edit-product-image-url').hide();
                        row.find('.save-product').hide();
                        row.find('.edit-product').show();
                    } else {
                        alert('Ошибка при обновлении товара.');
                    }
                },
                error: function () {
                    alert('Ошибка соединения с сервером.');
                }
            });
        });

        $('#showAddProductForm').click(function () {
            $('#addProductForm').toggle();
        });

        $('#formAddProduct').submit(function (event) {
            event.preventDefault();
            $.ajax({
                type: 'POST',
                url: '@Url.Action("CreateProduct")',
                data: $(this).serialize(),
                success: function (data) {
                    location.reload();
                },
                error: function (err) {
                    alert('Ошибка при добавлении товара!');
                }
            });
        });
    });
</script>

<a href="@Url.Action("Logout")" class="button">Выход</a>


